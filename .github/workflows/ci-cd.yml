name: Build, Push and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: anishanniz/test-cesi-web-app:latest,anishanniz/test-cesi-web-app:${{ github.sha }}

  deploy-on-k8s:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Create deployment file if not exists
        run: |
          if [ ! -f deployment.yaml ]; then
            cat > deployment.yaml << EOF
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: test-cesi-web-app
            labels:
              app: test-cesi-web-app
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: test-cesi-web-app
            template:
              metadata:
                labels:
                  app: test-cesi-web-app
              spec:
                containers:
                - name: test-cesi-web-app
                  image: anishanniz/test-cesi-web-app:${{ github.sha }}
                  ports:
                  - containerPort: 80
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: test-cesi-web-app
          spec:
            selector:
              app: test-cesi-web-app
            ports:
            - port: 80
              targetPort: 80
            type: ClusterIP
          EOF
          fi

      - name: Deploy to Kubernetes
        run: |
          # Update image tag in deployment file if it already exists
          sed -i "s|image: anishanniz/test-cesi-web-app:.*|image: anishanniz/test-cesi-web-app:${{ github.sha }}|" deployment.yaml
          
          # Apply Kubernetes manifests
          kubectl apply -f deployment.yaml
          
          # Verify deployment
          kubectl rollout status deployment/test-cesi-web-app
